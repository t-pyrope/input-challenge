{"version":3,"sources":["helpers/hooks.ts","actions/actionTypes.ts","components/Header.tsx","actions/inputAction.ts","components/AddButton.tsx","components/AsidePanel.tsx","helpers/functions.ts","components/Input.tsx","components/MainPanel.tsx","App.tsx","reducers/inputReducer.ts","reducers/index.ts","index.tsx"],"names":["useAppDispatch","useDispatch","useAppSelector","useSelector","ADD_INPUT","DELETE_INPUT","DELETE_ALL","Header","store","input","inputs","dispatch","deleteAllHandler","type","className","length","onClick","AddButton","text","delay","motion","button","initial","y","opacity","animate","transition","duration","AsidePanel","inputHandler","payload","addInput","formatDate","date","str","getMonth","getDate","map","component","slice","getFullYear","join","Input","id","label","useState","inputValue","setInputValue","isDisabled","setIsDisabled","useEffect","randomColor","now","Date","match","deleteInputHandler","deleteInput","form","x","stiffness","damping","exit","onSubmit","e","preventDefault","console","log","includes","formSubmitHandler","value","onChange","target","inputValueHandler","disabled","MainPanel","AnimatePresence","reverse","App","initState","inputReducer","state","action","uuid_v4","emoji","randomWords","exactly","wordsPerString","filter","rootReducer","combineReducers","createStore","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ee076844.chunk.js","sourcesContent":["import { TypedUseSelectorHook, useDispatch, useSelector } from 'react-redux'\nimport type { RootState, AppDispatch } from '../index';\n\n// eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types\nexport const useAppDispatch = () => useDispatch<AppDispatch>()\nexport const useAppSelector: TypedUseSelectorHook<RootState> = useSelector\n","export const ADD_INPUT = \"ADD_INPUT\";\nexport const DELETE_INPUT = \"DELETE_INPUT\";\nexport const DELETE_ALL = \"DELETE_ALL\";\n","import React from 'react';\nimport { useAppDispatch, useAppSelector } from '../helpers/hooks';\nimport { deleteAll } from '../actions/inputAction';\n\nconst Header: React.FC = () => {\n    const { inputs } = useAppSelector((store) => store.input);\n    const dispatch = useAppDispatch();\n\n    const deleteAllHandler = () => {\n        dispatch(deleteAll());\n    };\n\n    return (\n        <div className='header'>\n            <h1>Input challenge</h1>\n            {inputs.length ? (\n                <button\n                    className='button'\n                    onClick={() => deleteAllHandler()}\n                >\n                    <b>(delete all)</b>\n                </button>\n            ) : (\n                ''\n            )}\n        </div>\n    );\n};\n\nexport default Header;\n","import {\r\n    ADD_INPUT, DELETE_INPUT, DELETE_ALL,\r\n} from './actionTypes';\r\n\r\nimport {\r\n    AddInputAction, DeleteInputAction,\r\n    DeleteAllAction,\r\n} from './types';\r\n\r\nexport const addInput = (type: string): AddInputAction => ({\r\n    type: ADD_INPUT,\r\n    payload: {\r\n        type\r\n    },\r\n});\r\n\r\nexport const deleteInput = (id: string): DeleteInputAction => ({\r\n    type: DELETE_INPUT,\r\n    payload: {\r\n        id,\r\n    },\r\n});\r\n\r\nexport const deleteAll = (): DeleteAllAction => ({\r\n    type: DELETE_ALL,\r\n});\r\n","import React from 'react';\nimport { motion } from 'framer-motion';\n\ninterface AddButtonInterface {\n    text: string,\n    delay: number,\n    onClick: (value: string) => void\n}\n\nconst AddButton: React.FC<AddButtonInterface> = ({\n    text, delay, onClick\n}) => (\n    <motion.button\n        initial={{ y: 20, opacity: 0 }}\n        animate={{y: 0, opacity: 1}}\n        transition={{ duration: 0.01, delay }}\n        className='button button_add'\n        onClick={() => onClick('text')}\n    >\n        {text}\n    </motion.button>\n)\nexport default AddButton;\n","import * as React from 'react';\r\nimport { useAppDispatch } from '../helpers/hooks';\r\nimport { addInput } from '../actions/inputAction';\r\nimport AddButton from './AddButton';\r\n\r\nconst AsidePanel: React.FC = () => {\r\n    const dispatch = useAppDispatch();\r\n\r\n    const inputHandler = (type: string): void => {\r\n        dispatch(addInput(type));\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <div className='container'>\r\n                <AddButton\r\n                    text=\"Add text field\"\r\n                    onClick={() => inputHandler('text')}\r\n                    delay={0}\r\n                />\r\n                <AddButton\r\n                    text=\"Add number field\"\r\n                    onClick={() => inputHandler('number')}\r\n                    delay={0.2}\r\n                />\r\n                <AddButton\r\n                    text=\"Add color field\"\r\n                    onClick={() => inputHandler('color')}\r\n                    delay={0.4}\r\n                />\r\n                <AddButton\r\n                    text=\"Add date field\"\r\n                    onClick={() => inputHandler('date')}\r\n                    delay={0.6}\r\n                />\r\n                <AddButton\r\n                    text=\"Add range field\"\r\n                    onClick={() => inputHandler('range')}\r\n                    delay={0.8}\r\n                />\r\n                <AddButton\r\n                    text=\"Add email field\"\r\n                    onClick={() => inputHandler('email')}\r\n                    delay={1}\r\n                />\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default AsidePanel;\r\n","const formatDate = (date: Date): string => {\n    const str = [\n        `0${date.getMonth() + 1}`,\n        `0${date.getDate()}`\n    ].map(component => component.slice(-2));\n    return `${date.getFullYear()}-${str.join(\"-\")}`;\n}\n\nexport default formatDate;\n","import React, { useState, useEffect } from 'react';\r\nimport randomColor from 'randomcolor';\r\nimport { motion } from 'framer-motion';\r\n\r\nimport { deleteInput } from '../actions/inputAction';\r\n\r\nimport { useAppDispatch } from '../helpers/hooks';\r\nimport formatDate from '../helpers/functions';\r\n\r\ninterface InputProps {\r\n    type: string,\r\n    id: string,\r\n    label: string\r\n}\r\n\r\nconst Input = ({ type, id, label }: InputProps): React.ReactElement => {\r\n    const [inputValue, setInputValue] = useState('');\r\n    const [isDisabled, setIsDisabled] = useState(true);\r\n\r\n    const dispatch = useAppDispatch();\r\n\r\n    useEffect(() => {\r\n        if (type === 'color') {\r\n            setInputValue(randomColor());\r\n        }\r\n        if (type === 'range') {\r\n            setInputValue('50');\r\n        }\r\n        if (type === 'date') {\r\n            const now = new Date();\r\n            setInputValue(formatDate(now));\r\n        }\r\n    }, [setInputValue, type]);\r\n\r\n    useEffect(() => {\r\n        if (!inputValue || (type === 'email'\r\n            && !inputValue.match(/^[a-zA-Z0-9._:$!%-]+@[a-zA-Z0-9.-]+.[a-zA-Z]$/)\r\n        )) { setIsDisabled(true); } else { setIsDisabled(false); }\r\n    }, [inputValue, type]);\r\n\r\n    const deleteInputHandler = () => {\r\n        dispatch(deleteInput(id));\r\n    };\r\n\r\n    const inputValueHandler = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n        setInputValue(e.target.value);\r\n    };\r\n\r\n    const formSubmitHandler = (e: React.SyntheticEvent) => {\r\n        e.preventDefault();\r\n        // eslint-disable-next-line no-console\r\n        console.log(inputValue);\r\n        if (['text', 'number', 'email'].includes(type)) setInputValue('');\r\n    };\r\n\r\n    return (\r\n        <motion.form\r\n            initial={{ x: -50, opacity: 0 }}\r\n            animate={{ opacity: 1, x: 0 }}\r\n            transition={{\r\n                type: \"spring\",\r\n                stiffness: 200,\r\n                damping: 20\r\n            }}\r\n            exit={{ opacity: 0, x: 50, transition: {duration: 0.4} }}\r\n            className=\"input\"\r\n            onSubmit={(e) => formSubmitHandler(e)}\r\n        >\r\n            <header className=\"input__header\">\r\n                <h4>\r\n                    {label}\r\n                    {' '}\r\n                    <span className=\"input__span\">\r\n                        (\r\n                        {type}\r\n                        )\r\n                    </span>\r\n                </h4>\r\n                <button\r\n                    aria-label=\"delete\"\r\n                    type=\"button\"\r\n                    className=\"button button_trash\"\r\n                    onClick={() => deleteInputHandler()}\r\n                />\r\n            </header>\r\n            <div className=\"input__body\">\r\n                <input\r\n                    type={type}\r\n                    value={inputValue}\r\n                    onChange={(e) => inputValueHandler(e)}\r\n                />\r\n                <button\r\n                    className=\"button button_small input__submit\"\r\n                    type=\"submit\"\r\n                    disabled={isDisabled}\r\n                >\r\n                    Console.log it!\r\n                </button>\r\n            </div>\r\n        </motion.form>\r\n    );\r\n};\r\n\r\nexport default Input;\r\n","import React from 'react';\r\nimport { AnimatePresence } from 'framer-motion';\r\n\r\nimport { useAppSelector } from '../helpers/hooks';\r\nimport Input from './Input';\r\n\r\ninterface InputInterface {\r\n    type: string,\r\n    id: string,\r\n    label: string,\r\n}\r\n\r\nconst MainPanel: React.FC = () => {\r\n    const { inputs } = useAppSelector((store) => store.input);\r\n\r\n    return (\r\n        <div>\r\n            <AnimatePresence>\r\n                {inputs.length ? inputs\r\n                    .slice()\r\n                    .reverse()\r\n                    .map((input: InputInterface) => (\r\n                        <Input\r\n                            key={input.id}\r\n                            id={input.id}\r\n                            type={input.type}\r\n                            label={input.label}\r\n                        />\r\n                    )) : (\r\n                        ''\r\n                    )}\r\n            </AnimatePresence>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default MainPanel;\r\n","import React from 'react';\r\nimport Header from './components/Header';\r\nimport AsidePanel from './components/AsidePanel';\r\nimport MainPanel from './components/MainPanel';\r\n\r\nconst App: React.FC = () => (\r\n    <div className='App' >\r\n        <Header />\r\n        <div className=\"main\">\r\n            <AsidePanel />\r\n            <MainPanel />\r\n        </div>\r\n    </div>\r\n)\r\n\r\nexport default App;\r\n","import { AnyAction } from 'redux';\r\n\r\nimport randomWords from 'random-words';\r\nimport emoji from 'random-happy-emoji';\r\nimport { v4 as uuid_v4 } from 'uuid';\r\n\r\nimport { ADD_INPUT, DELETE_INPUT, DELETE_ALL } from '../actions/actionTypes';\r\nimport { InputState } from './types';\r\n\r\nconst initState: InputState = {\r\n    inputs: [],\r\n};\r\n\r\nconst inputReducer = (state: InputState = initState, action: AnyAction): InputState => {\r\n    switch (action.type) {\r\n        case ADD_INPUT:\r\n            return {\r\n                ...state,\r\n                inputs: [\r\n                    ...state.inputs,\r\n                    {\r\n                        type: action.payload.type,\r\n                        id: uuid_v4(),\r\n                        label: `${emoji()} ${randomWords({ exactly: 1, wordsPerString: 2 })[0]}`\r\n                    },\r\n                ],\r\n            };\r\n        case DELETE_INPUT:\r\n            return {\r\n                ...state,\r\n                inputs: state.inputs.filter(\r\n                    (input) => input.id !== action.payload.id,\r\n                ),\r\n            };\r\n        case DELETE_ALL:\r\n            return {\r\n                ...state,\r\n                inputs: [],\r\n            };\r\n        default:\r\n            return { ...state };\r\n    }\r\n};\r\n\r\nexport default inputReducer;\r\n","import { combineReducers } from 'redux';\r\nimport inputReducer from './inputReducer';\r\n\r\nconst rootReducer = combineReducers({\r\n    input: inputReducer,\r\n});\r\n\r\nexport default rootReducer;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { createStore } from 'redux';\r\nimport { Provider } from 'react-redux';\r\nimport App from './App';\r\nimport rootReducer from './reducers';\r\nimport './assets/styles/main.scss';\r\n\r\nconst store = createStore(rootReducer);\r\n\r\n// \"Whatever is being returned from store.getState, I want the types stored ad the RootState variable\" \r\n// https://stackoverflow.com/a/67656911/13891817\r\nexport type RootState = ReturnType<typeof store.getState>\r\n\r\n// \"Get the dispatch object from the store, break it down into it's types, and store it in the AppDispatch variable\"\r\n// https://stackoverflow.com/a/67656911/13891817\r\nexport type AppDispatch = typeof store.dispatch;\r\n\r\nReactDOM.render(\r\n    <React.StrictMode>\r\n        <Provider store={store} >\r\n            <App />\r\n        </Provider>\r\n    </React.StrictMode>,\r\n    document.getElementById('root'),\r\n);\r\n"],"sourceRoot":""}