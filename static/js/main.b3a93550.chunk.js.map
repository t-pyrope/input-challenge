{"version":3,"sources":["i18n.ts","actions/actionTypes.ts","actions/inputAction.ts","components/Header.tsx","components/AddButton.tsx","components/AsidePanel.tsx","helpers/functions.ts","components/Input.tsx","components/MainPanel.tsx","App.tsx","reducers/inputReducer.ts","reducers/index.ts","index.tsx"],"names":["i18n","use","initReactI18next","init","resources","en","translation","inputChallenge","deleteAll","addColorField","addDateField","addEmailField","addNumberField","addRangeField","addTextField","text","number","color","date","email","range","ru","cs","lng","keySeparator","interpolation","escapeValue","ADD_INPUT","DELETE_INPUT","DELETE_ALL","deleteInput","id","type","payload","Header","useState","lang","setLang","inputs","useSelector","state","input","dispatch","useDispatch","t","useTranslation","deleteAllHandler","className","length","onClick","value","onChange","e","target","changeLanguage","AddButton","delay","motion","button","initial","y","opacity","animate","transition","duration","AsidePanel","inputHandler","addInput","formatDate","str","getMonth","getDate","map","component","slice","getFullYear","join","Input","label","inputValue","setInputValue","isDisabled","setIsDisabled","useEffect","randomColor","now","Date","match","form","x","stiffness","damping","exit","onSubmit","preventDefault","console","log","includes","formSubmitHandler","drag","dragConstraints","left","right","onDragEnd","inputValueHandler","disabled","MainPanel","store","AnimatePresence","reverse","App","initState","inputReducer","action","uuid_v4","emoji","randomWords","exactly","wordsPerString","filter","rootReducer","combineReducers","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","createStore","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b3a93550.chunk.js","sourcesContent":["import i18n from 'i18next';\nimport { initReactI18next } from 'react-i18next';\n\nconst resources = {\n  en: {\n    translation: {\n        inputChallenge: 'Add inputs !',\n        deleteAll: \"delete all\",\n        addColorField: 'Add color field',\n        addDateField: 'Add date field',\n        addEmailField: 'Add email field',\n        addNumberField: 'Add number field',\n        addRangeField: 'Add range field',\n        addTextField: \"Add text field\",\n        text: 'text',\n        number: 'number',\n        color: 'color',\n        date: 'date',\n        email: 'email',\n        range: 'range'\n    },\n  },\n  ru: {\n    translation: {\n        inputChallenge: 'Добавь инпуты !',\n        addColorField: 'Поле с цветом',\n        addDateField: 'Поле с датой',\n        addEmailField: 'Поле с имэйлом',\n        addNumberField: 'Числовое поле',\n        addRangeField: 'Поле с диапазоном',\n        addTextField: \"Текстовое поле\",\n        deleteAll: \"удалить все\",\n        text: 'текст',\n        number: 'число',\n        color: 'цвет',\n        date: 'дата',\n        email: 'имэйл',\n        range: 'диапазон'\n    },\n  },\n  cs: {\n    translation: {\n        inputChallenge: 'Přidej inputy !',\n        addColorField: 'Pole s barvou',\n        addDateField: 'Pole s datem',\n        addEmailField: 'Pole s emailem',\n        addNumberField: 'Číselné pole',\n        addRangeField: 'Pole se škálou',\n        addTextField: \"Textové pole\",\n        deleteAll: \"smazat vše\",\n        text: 'text',\n        number: 'číslo',\n        color: 'barva',\n        date: 'datum',\n        email: 'email',\n        range: 'škála'\n    },\n  },\n};\n\ni18n\n  .use(initReactI18next)\n  .init({\n    resources,\n    lng: 'en',\n    keySeparator: false,\n    interpolation: {\n      escapeValue: false,\n    },\n  });\n\nexport default i18n;\n","export const ADD_INPUT = \"ADD_INPUT\";\nexport const DELETE_INPUT = \"DELETE_INPUT\";\nexport const DELETE_ALL = \"DELETE_ALL\";\n","import {\r\n    ADD_INPUT, DELETE_INPUT, DELETE_ALL,\r\n} from './actionTypes';\r\n\r\nimport {\r\n    AddInputAction, DeleteInputAction,\r\n    DeleteAllAction,\r\n} from './types';\r\n\r\nexport const addInput = (type: string): AddInputAction => ({\r\n    type: ADD_INPUT,\r\n    payload: {\r\n        type\r\n    },\r\n});\r\n\r\nexport const deleteInput = (id: string): DeleteInputAction => ({\r\n    type: DELETE_INPUT,\r\n    payload: {\r\n        id,\r\n    },\r\n});\r\n\r\nexport const deleteAll = (): DeleteAllAction => ({\r\n    type: DELETE_ALL,\r\n});\r\n","import React, { useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useTranslation } from 'react-i18next';\r\nimport i18n from '../i18n';\r\nimport { deleteAll } from '../actions/inputAction';\r\nimport { RootState } from '../reducers/types';\r\n\r\nconst Header: React.FC = () => {\r\n    const [lang, setLang] = useState('en');\r\n    const { inputs } = useSelector((state: RootState) => state.input);\r\n    const dispatch = useDispatch();\r\n    const { t } = useTranslation();\r\n\r\n    const changeLanguage = (lng: string): void => {\r\n      i18n.changeLanguage(lng);\r\n    };\r\n\r\n    const deleteAllHandler = () => {\r\n        dispatch(deleteAll());\r\n    };\r\n\r\n    const onChange = (e: React.ChangeEvent<HTMLSelectElement>): void => {\r\n        const { value } = e.target;\r\n        changeLanguage(value);\r\n        setLang(value);\r\n        \r\n    }\r\n\r\n    return (\r\n        <div className='header'>\r\n            <div className=\"container container_start\">\r\n                <h1>{t('inputChallenge')}</h1>\r\n                {' '}\r\n                {inputs.length ? (\r\n                    <button\r\n                        className='button'\r\n                        onClick={() => deleteAllHandler()}\r\n                    >\r\n                        <b>({t('deleteAll')})</b>\r\n                    </button>\r\n                ) : (\r\n                    ''\r\n                )}\r\n            </div>\r\n            <select value={lang} onChange={onChange}>\r\n                <option value=\"en\">en</option>\r\n                <option value=\"ru\">ru</option>\r\n                <option value=\"cs\">cs</option>\r\n            </select>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Header;\r\n","import React from 'react';\r\nimport { motion } from 'framer-motion';\r\n\r\ninterface AddButtonInterface {\r\n    text: string,\r\n    delay: number,\r\n    type: string,\r\n    onClick: (value: string) => void\r\n}\r\n\r\nconst AddButton: React.FC<AddButtonInterface> = ({\r\n    text, delay, onClick, type\r\n}) => (\r\n    <motion.button\r\n        initial={{ y: 20, opacity: 0 }}\r\n        animate={{y: 0, opacity: 1}}\r\n        transition={{ duration: 0.01, delay }}\r\n        className='button button_add'\r\n        onClick={() => onClick(type)}\r\n    >\r\n        {text}\r\n    </motion.button>\r\n)\r\nexport default AddButton;\r\n","import * as React from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { addInput } from '../actions/inputAction';\r\nimport AddButton from './AddButton';\r\n\r\nconst AsidePanel: React.FC = () => {\r\n    const dispatch = useDispatch();\r\n    const { t } = useTranslation();\r\n\r\n    const inputHandler = (type: string): void => {\r\n        dispatch(addInput(type));\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <div className='container'>\r\n                <AddButton\r\n                    text={t('addTextField')}\r\n                    onClick={inputHandler}\r\n                    delay={0}\r\n                    type=\"text\"\r\n                />\r\n                <AddButton\r\n                    text={t('addNumberField')}\r\n                    onClick={inputHandler}\r\n                    delay={0.2}\r\n                    type=\"number\"\r\n                />\r\n                <AddButton\r\n                    text={t('addColorField')}\r\n                    onClick={inputHandler}\r\n                    delay={0.4}\r\n                    type=\"color\"\r\n                />\r\n                <AddButton\r\n                    text={t('addDateField')}\r\n                    onClick={inputHandler}\r\n                    delay={0.6}\r\n                    type=\"date\"\r\n                />\r\n                <AddButton\r\n                    text={t('addRangeField')}\r\n                    onClick={inputHandler}\r\n                    delay={0.8}\r\n                    type=\"range\"\r\n                />\r\n                <AddButton\r\n                    text={t('addEmailField')}\r\n                    onClick={inputHandler}\r\n                    delay={1}\r\n                    type=\"email\"\r\n                />\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default AsidePanel;\r\n","const formatDate = (date: Date): string => {\n    const str = [\n        `0${date.getMonth() + 1}`,\n        `0${date.getDate()}`\n    ].map(component => component.slice(-2));\n    return `${date.getFullYear()}-${str.join(\"-\")}`;\n}\n\nexport default formatDate;\n","import React, { useState, useEffect } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { useTranslation } from 'react-i18next';\r\nimport randomColor from 'randomcolor';\r\nimport { motion } from 'framer-motion';\r\n\r\nimport { deleteInput } from '../actions/inputAction';\r\n\r\nimport formatDate from '../helpers/functions';\r\n\r\ninterface InputProps {\r\n    type: string,\r\n    id: string,\r\n    label: string\r\n}\r\n\r\nconst Input = ({ type, id, label }: InputProps): React.ReactElement => {\r\n    const [inputValue, setInputValue] = useState('');\r\n    const [isDisabled, setIsDisabled] = useState(true);\r\n\r\n    const { t } = useTranslation();\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(() => {\r\n        if (type === 'color') {\r\n            setInputValue(randomColor());\r\n        }\r\n        if (type === 'range') {\r\n            setInputValue('50');\r\n        }\r\n        if (type === 'date') {\r\n            const now = new Date();\r\n            setInputValue(formatDate(now));\r\n        }\r\n    }, [setInputValue, type]);\r\n\r\n    useEffect(() => {\r\n        if (!inputValue || (type === 'email'\r\n            && !inputValue.match(/^[a-zA-Z0-9._:$!%-]+@[a-zA-Z0-9.-]+.[a-zA-Z]$/)\r\n        )) { setIsDisabled(true); } else { setIsDisabled(false); }\r\n    }, [inputValue, type]);\r\n\r\n    const getType = (value: string): string => t(value)\r\n\r\n    const deleteInputHandler = () => {\r\n        dispatch(deleteInput(id));\r\n    };\r\n\r\n    const inputValueHandler = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n        setInputValue(e.target.value);\r\n    };\r\n\r\n    const formSubmitHandler = (e: React.SyntheticEvent) => {\r\n        e.preventDefault();\r\n        // eslint-disable-next-line no-console\r\n        console.log(inputValue);\r\n        if (['text', 'number', 'email'].includes(type)) setInputValue('');\r\n    };\r\n\r\n    const onDragEnd = () => {\r\n        dispatch(deleteInput(id));\r\n    }\r\n\r\n    return (\r\n        <motion.form\r\n            initial={{ x: -50, opacity: 0 }}\r\n            animate={{ opacity: 1, x: 0 }}\r\n            transition={{\r\n                type: \"spring\",\r\n                stiffness: 200,\r\n                damping: 20\r\n            }}\r\n            exit={{ opacity: 0, transition: {duration: 0.3} }}\r\n            className=\"input\"\r\n            onSubmit={(e) => formSubmitHandler(e)}\r\n            drag=\"x\"\r\n            dragConstraints={{ left: 0, right: 0 }}\r\n            onDragEnd={onDragEnd}\r\n        >\r\n            <header className=\"input__header\">\r\n                <h4>\r\n                    {label}\r\n                    {' '}\r\n                    <span className=\"input__span\">\r\n                        (\r\n                        {getType(type)}\r\n                        )\r\n                    </span>\r\n                </h4>\r\n                <button\r\n                    aria-label=\"delete\"\r\n                    type=\"button\"\r\n                    className=\"button button_trash\"\r\n                    onClick={() => deleteInputHandler()}\r\n                />\r\n            </header>\r\n            <div className=\"input__body\">\r\n                <input\r\n                    type={type}\r\n                    value={inputValue}\r\n                    onChange={(e) => inputValueHandler(e)}\r\n                />\r\n                <button\r\n                    className=\"button button_small input__submit\"\r\n                    type=\"submit\"\r\n                    disabled={isDisabled}\r\n                >\r\n                    Console.log it!\r\n                </button>\r\n            </div>\r\n        </motion.form>\r\n    );\r\n};\r\n\r\nexport default Input;\r\n","import React from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { AnimatePresence } from 'framer-motion';\r\n\r\nimport Input from './Input';\r\nimport { InputInterface, RootState } from '../reducers/types';\r\n\r\nconst MainPanel: React.FC = () => {\r\n    const { inputs } = useSelector((store: RootState) => store.input);\r\n\r\n    return (\r\n        <div>\r\n            <AnimatePresence>\r\n                {inputs.length ? inputs\r\n                    .slice()\r\n                    .reverse()\r\n                    .map((input: InputInterface) => (\r\n                        <Input\r\n                            key={input.id}\r\n                            id={input.id}\r\n                            type={input.type}\r\n                            label={input.label}\r\n                        />\r\n                    )) : (\r\n                        ''\r\n                    )}\r\n            </AnimatePresence>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default MainPanel;\r\n","import React from 'react';\r\nimport Header from './components/Header';\r\nimport AsidePanel from './components/AsidePanel';\r\nimport MainPanel from './components/MainPanel';\r\n\r\nconst App: React.FC = () => (\r\n    <div className='App' >\r\n        <Header />\r\n        <div className=\"main\">\r\n            <AsidePanel />\r\n            <MainPanel />\r\n        </div>\r\n    </div>\r\n)\r\n\r\nexport default App;\r\n","import { AnyAction } from 'redux';\r\n\r\nimport randomWords from 'random-words';\r\nimport emoji from 'random-happy-emoji';\r\nimport { v4 as uuid_v4 } from 'uuid';\r\n\r\nimport { ADD_INPUT, DELETE_INPUT, DELETE_ALL } from '../actions/actionTypes';\r\nimport { InputState } from './types';\r\n\r\nconst initState: InputState = {\r\n    inputs: [],\r\n};\r\n\r\nconst inputReducer = (state: InputState = initState, action: AnyAction): InputState => {\r\n    switch (action.type) {\r\n        case ADD_INPUT:\r\n            return {\r\n                ...state,\r\n                inputs: [\r\n                    ...state.inputs,\r\n                    {\r\n                        type: action.payload.type,\r\n                        id: uuid_v4(),\r\n                        label: `${emoji()} ${randomWords({ exactly: 1, wordsPerString: 2 })[0]}`\r\n                    },\r\n                ],\r\n            };\r\n        case DELETE_INPUT:\r\n            return {\r\n                ...state,\r\n                inputs: state.inputs.filter(\r\n                    (input) => input.id !== action.payload.id,\r\n                ),\r\n            };\r\n        case DELETE_ALL:\r\n            return {\r\n                ...state,\r\n                inputs: [],\r\n            };\r\n        default:\r\n            return { ...state };\r\n    }\r\n};\r\n\r\nexport default inputReducer;\r\n","import { combineReducers } from 'redux';\r\nimport inputReducer from './inputReducer';\r\n\r\nconst rootReducer = combineReducers({\r\n    input: inputReducer,\r\n});\r\n\r\nexport default rootReducer;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { createStore, compose } from 'redux';\r\nimport { Provider } from 'react-redux';\r\nimport App from './App';\r\nimport rootReducer from './reducers';\r\nimport './assets/styles/main.scss';\r\n\r\ndeclare global {\r\n    interface Window {\r\n      __REDUX_DEVTOOLS_EXTENSION_COMPOSE__?: typeof compose;\r\n    }\r\n}\r\n\r\n// eslint-disable-next-line no-underscore-dangle\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ as typeof compose || compose;\r\n\r\nconst store = createStore(rootReducer, composeEnhancers());\r\n\r\nReactDOM.render(\r\n    <React.StrictMode>\r\n        <Provider store={store} >\r\n            <App />\r\n        </Provider>\r\n    </React.StrictMode>,\r\n    document.getElementById('root'),\r\n);\r\n"],"sourceRoot":""}