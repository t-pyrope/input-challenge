{"version":3,"sources":["components/AsidePanel.js","actions/inputAction.js","components/Input.js","components/MainPanel.js","App.js","reportWebVitals.js","reducers/inputReducer.js","reducers/index.js","index.js"],"names":["AsidePanel","dispatch","useDispatch","inputHandler","type","payload","id","uuid_v4","addInput","className","onClick","Input","label","useState","inputValue","setInputValue","isDisabled","setIsDisabled","useEffect","randomColor","match","onSubmit","e","preventDefault","console","log","includes","formSubmitHandler","aria-label","deleteInput","value","onChange","target","inputValueHandler","disabled","MainPanel","inputs","useSelector","store","input","length","slice","reverse","map","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","initState","inputReducer","state","action","emoji","randomWords","exactly","wordsPerString","filter","rootReducer","combineReducers","createStore","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b7079423.chunk.js","sourcesContent":["import React from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { addInput } from '../actions/inputAction';\r\n\r\nconst AsidePanel = () => {\r\n    const dispatch = useDispatch();\r\n\r\n    const inputHandler = (type) => {\r\n        dispatch(addInput(type));\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <div className='container'>\r\n                <button\r\n                    className='button button_add'\r\n                    onClick={() => inputHandler('text')}\r\n                >\r\n                    Add text field\r\n                </button>\r\n                <button\r\n                    className='button button_add'\r\n                    onClick={() => inputHandler('number')}\r\n                >\r\n                    Add number field\r\n                </button>\r\n                <button\r\n                    className='button button_add'\r\n                    onClick={() => inputHandler('color')}\r\n                >\r\n                    Add color field\r\n                </button>\r\n                <button\r\n                    className='button button_add'\r\n                    onClick={() => inputHandler('date')}\r\n                >\r\n                    Add date field\r\n                </button>\r\n                <button\r\n                    className='button button_add'\r\n                    onClick={() => inputHandler('range')}\r\n                >\r\n                    Add range field\r\n                </button>\r\n                <button\r\n                    className='button button_add'\r\n                    onClick={() => inputHandler('email')}\r\n                >\r\n                    Add email field\r\n                </button>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default AsidePanel;\r\n","import { v4 as uuid_v4 } from 'uuid';\r\n\r\nexport const addInput = (type) => {\r\n    return {\r\n        type: 'ADD_INPUT',\r\n        payload: {\r\n            type: type,\r\n            id: uuid_v4(),\r\n        },\r\n    };\r\n};\r\n\r\nexport const deleteInput = (id) => {\r\n    return {\r\n        type: 'DELETE_INPUT',\r\n        payload: {\r\n            id: id,\r\n        },\r\n    };\r\n};\r\n\r\nexport const deleteAll = () => {\r\n    return {\r\n        type: 'DELETE_ALL',\r\n    };\r\n};\r\n","import React, { useState, useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { useDispatch } from 'react-redux';\r\nimport { deleteInput } from '../actions/inputAction';\r\nimport randomColor from 'randomcolor';\r\n\r\nconst Input = ({ type, id, label }) => {\r\n    const [inputValue, setInputValue] = useState('');\r\n    const [isDisabled, setIsDisabled] = useState(true);\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(() => {\r\n        if (type === 'color') {\r\n            setInputValue(randomColor);\r\n        }\r\n        if (type === 'range') {\r\n            setInputValue('50');\r\n        }\r\n    }, [setInputValue, type]);\r\n\r\n    useEffect(() => {\r\n        if (!inputValue || (type === 'email' &&\r\n            !inputValue.match(/^[a-zA-Z0-9._:$!%-]+@[a-zA-Z0-9.-]+.[a-zA-Z]$/)\r\n        )) { setIsDisabled(true); } else { setIsDisabled(false) }\r\n    }, [inputValue, type]);\r\n\r\n    const deleteInputHandler = () => {\r\n        dispatch(deleteInput(id));\r\n    };\r\n\r\n    const inputValueHandler = (e) => {\r\n        setInputValue(e.target.value);\r\n    };\r\n\r\n    const formSubmitHandler = (e) => {\r\n        e.preventDefault();\r\n        console.log(inputValue);\r\n        if (['text', 'number', 'email'].includes(type)) setInputValue('');\r\n    };\r\n\r\n    return (\r\n        <form className='input' onSubmit={(e) => formSubmitHandler(e)}>\r\n            <header className='input__header'>\r\n                <h4>\r\n                    {label} <span className='input__span'>({type})</span>\r\n                </h4>\r\n                <button\r\n                    aria-label='delete'\r\n                    type='button'\r\n                    className='button button_trash'\r\n                    onClick={() => deleteInputHandler()}\r\n                ></button>\r\n            </header>\r\n            <div className='input__body'>\r\n                <input\r\n                    type={type}\r\n                    value={inputValue}\r\n                    onChange={(e) => inputValueHandler(e)}\r\n                />\r\n                <button\r\n                    className='button button_small input__submit'\r\n                    type='submit'\r\n                    disabled={isDisabled}\r\n                >\r\n                    Console.log it!\r\n                </button>\r\n            </div>\r\n        </form>\r\n    );\r\n};\r\n\r\nInput.propTypes = {\r\n    type: PropTypes.string.isRequired,\r\n    id: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default Input;\r\n","import React from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport Input from './Input';\r\nimport { deleteAll } from '../actions/inputAction';\r\n\r\nconst MainPanel = () => {\r\n    const { inputs } = useSelector((store) => store.input);\r\n    const dispatch = useDispatch();\r\n\r\n    const deleteAllHandler = () => {\r\n        dispatch(deleteAll());\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <div className='header'>\r\n                <h1>Input challenge</h1>\r\n                {inputs.length ? (\r\n                    <button\r\n                        className='button'\r\n                        onClick={() => deleteAllHandler()}\r\n                    >\r\n                        <b>(delete all)</b>\r\n                    </button>\r\n                ) : (\r\n                    ''\r\n                )}\r\n            </div>\r\n            {inputs.length ? (\r\n                <div>\r\n                    {inputs\r\n                        .slice()\r\n                        .reverse()\r\n                        .map((input) => (\r\n                            <Input\r\n                                key={input.id}\r\n                                id={input.id}\r\n                                type={input.type}\r\n                                label={input.label}\r\n                            />\r\n                        ))}\r\n                </div>\r\n            ) : (\r\n                ''\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default MainPanel;\r\n","import React from 'react';\r\nimport AsidePanel from './components/AsidePanel';\r\nimport MainPanel from './components/MainPanel';\r\n\r\nfunction App() {\r\n    return (\r\n        <div className='App'>\r\n            <AsidePanel />\r\n            <MainPanel />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import randomWords from 'random-words';\r\nimport emoji from 'random-happy-emoji';\r\n\r\nconst initState = {\r\n    inputs: [],\r\n};\r\n\r\nconst inputReducer = (state = initState, action) => {\r\n    switch (action.type) {\r\n        case 'ADD_INPUT':\r\n            return {\r\n                ...state,\r\n                inputs: [\r\n                    ...state.inputs,\r\n                    {\r\n                        type: action.payload.type,\r\n                        id: action.payload.id,\r\n                        label: `${ emoji() } ${ randomWords({ exactly: 1, wordsPerString: 2 })[0] }`\r\n                    },\r\n                ],\r\n            };\r\n        case 'DELETE_INPUT':\r\n            return {\r\n                ...state,\r\n                inputs: state.inputs.filter(\r\n                    (input) => input.id !== action.payload.id,\r\n                ),\r\n            };\r\n        case 'DELETE_ALL':\r\n            return {\r\n                ...state,\r\n                inputs: [],\r\n            };\r\n        default:\r\n            return { ...state };\r\n    }\r\n};\r\n\r\nexport default inputReducer;\r\n","import { combineReducers } from 'redux';\r\nimport inputReducer from './inputReducer';\r\n\r\nconst rootReducer = combineReducers({\r\n    input: inputReducer,\r\n});\r\n\r\nexport default rootReducer;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport { createStore } from 'redux';\r\nimport { Provider } from 'react-redux';\r\nimport rootReducer from './reducers';\r\nimport './assets/styles/main.scss';\r\n\r\nconst store = createStore(rootReducer);\r\n\r\nReactDOM.render(\r\n    <React.StrictMode>\r\n        <Provider store={store}>\r\n            <App />\r\n        </Provider>\r\n    </React.StrictMode>,\r\n    document.getElementById('root'),\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}