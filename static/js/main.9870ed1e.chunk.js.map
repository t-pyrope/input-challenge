{"version":3,"sources":["i18n.ts","helpers/hooks.ts","actions/actionTypes.ts","components/Header.tsx","actions/inputAction.ts","components/AddButton.tsx","components/AsidePanel.tsx","helpers/functions.ts","components/Input.tsx","components/MainPanel.tsx","App.tsx","reducers/inputReducer.ts","reducers/index.ts","index.tsx"],"names":["i18n","use","initReactI18next","init","resources","en","translation","inputChallenge","deleteAll","addColorField","addDateField","addEmailField","addNumberField","addRangeField","addTextField","text","number","color","date","email","range","ru","cs","lng","keySeparator","interpolation","escapeValue","useAppDispatch","useDispatch","useAppSelector","useSelector","ADD_INPUT","DELETE_INPUT","DELETE_ALL","Header","useState","lang","setLang","store","input","inputs","dispatch","t","useTranslation","deleteAllHandler","type","className","length","onClick","value","onChange","e","target","changeLanguage","AddButton","delay","motion","button","initial","y","opacity","animate","transition","duration","AsidePanel","inputHandler","payload","addInput","formatDate","str","getMonth","getDate","map","component","slice","getFullYear","join","Input","id","label","inputValue","setInputValue","isDisabled","setIsDisabled","useEffect","randomColor","now","Date","match","deleteInputHandler","deleteInput","form","x","stiffness","damping","exit","onSubmit","preventDefault","console","log","includes","formSubmitHandler","inputValueHandler","disabled","MainPanel","AnimatePresence","reverse","App","initState","inputReducer","state","action","uuid_v4","emoji","randomWords","exactly","wordsPerString","filter","rootReducer","combineReducers","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","createStore","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9870ed1e.chunk.js","sourcesContent":["import i18n from 'i18next';\nimport { initReactI18next } from 'react-i18next';\n\nconst resources = {\n  en: {\n    translation: {\n        inputChallenge: 'Add inputs !',\n        deleteAll: \"delete all\",\n        addColorField: 'Add color field',\n        addDateField: 'Add date field',\n        addEmailField: 'Add email field',\n        addNumberField: 'Add number field',\n        addRangeField: 'Add range field',\n        addTextField: \"Add text field\",\n        text: 'text',\n        number: 'number',\n        color: 'color',\n        date: 'date',\n        email: 'email',\n        range: 'range'\n    },\n  },\n  ru: {\n    translation: {\n        inputChallenge: 'Добавь инпуты !',\n        addColorField: 'Поле с цветом',\n        addDateField: 'Поле с датой',\n        addEmailField: 'Поле с имэйлом',\n        addNumberField: 'Числовое поле',\n        addRangeField: 'Поле с диапазоном',\n        addTextField: \"Текстовое поле\",\n        deleteAll: \"удалить все\",\n        text: 'текст',\n        number: 'число',\n        color: 'цвет',\n        date: 'дата',\n        email: 'имэйл',\n        range: 'диапазон'\n    },\n  },\n  cs: {\n    translation: {\n        inputChallenge: 'Přidej inputy !',\n        addColorField: 'Pole s barvou',\n        addDateField: 'Pole s datem',\n        addEmailField: 'Pole s emailem',\n        addNumberField: 'Číselné pole',\n        addRangeField: 'Pole se škálou',\n        addTextField: \"Textové pole\",\n        deleteAll: \"smazat vše\",\n        text: 'text',\n        number: 'číslo',\n        color: 'barva',\n        date: 'datum',\n        email: 'email',\n        range: 'škála'\n    },\n  },\n};\n\ni18n\n  .use(initReactI18next)\n  .init({\n    resources,\n    lng: 'en',\n    keySeparator: false,\n    interpolation: {\n      escapeValue: false,\n    },\n  });\n\nexport default i18n;","import { TypedUseSelectorHook, useDispatch, useSelector } from 'react-redux'\nimport type { RootState, AppDispatch } from '../index';\n\n// eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types\nexport const useAppDispatch = () => useDispatch<AppDispatch>()\nexport const useAppSelector: TypedUseSelectorHook<RootState> = useSelector\n","export const ADD_INPUT = \"ADD_INPUT\";\nexport const DELETE_INPUT = \"DELETE_INPUT\";\nexport const DELETE_ALL = \"DELETE_ALL\";\n","import React, { useState } from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\nimport i18n from '../i18n';\r\nimport { useAppDispatch, useAppSelector } from '../helpers/hooks';\r\nimport { deleteAll } from '../actions/inputAction';\r\n\r\nconst Header: React.FC = () => {\r\n    const [lang, setLang] = useState('en');\r\n    const { inputs } = useAppSelector((store) => store.input);\r\n    const dispatch = useAppDispatch();\r\n    const { t } = useTranslation();\r\n\r\n    const changeLanguage = (lng: string): void => {\r\n      i18n.changeLanguage(lng);\r\n    };\r\n\r\n    const deleteAllHandler = () => {\r\n        dispatch(deleteAll());\r\n    };\r\n\r\n    const onChange = (e: React.ChangeEvent<HTMLSelectElement>): void => {\r\n        const { value } = e.target;\r\n        changeLanguage(value);\r\n        setLang(value);\r\n        \r\n    }\r\n\r\n    return (\r\n        <div className='header'>\r\n            <div className=\"container container_start\">\r\n                <h1>{t('inputChallenge')}</h1>\r\n                {' '}\r\n                {inputs.length ? (\r\n                    <button\r\n                        className='button'\r\n                        onClick={() => deleteAllHandler()}\r\n                    >\r\n                        <b>({t('deleteAll')})</b>\r\n                    </button>\r\n                ) : (\r\n                    ''\r\n                )}\r\n            </div>\r\n            <select value={lang} onChange={onChange}>\r\n                <option value=\"en\">en</option>\r\n                <option value=\"ru\">ru</option>\r\n                <option value=\"cs\">cs</option>\r\n            </select>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Header;\r\n","import {\r\n    ADD_INPUT, DELETE_INPUT, DELETE_ALL,\r\n} from './actionTypes';\r\n\r\nimport {\r\n    AddInputAction, DeleteInputAction,\r\n    DeleteAllAction,\r\n} from './types';\r\n\r\nexport const addInput = (type: string): AddInputAction => ({\r\n    type: ADD_INPUT,\r\n    payload: {\r\n        type\r\n    },\r\n});\r\n\r\nexport const deleteInput = (id: string): DeleteInputAction => ({\r\n    type: DELETE_INPUT,\r\n    payload: {\r\n        id,\r\n    },\r\n});\r\n\r\nexport const deleteAll = (): DeleteAllAction => ({\r\n    type: DELETE_ALL,\r\n});\r\n","import React from 'react';\r\nimport { motion } from 'framer-motion';\r\n\r\ninterface AddButtonInterface {\r\n    text: string,\r\n    delay: number,\r\n    type: string,\r\n    onClick: (value: string) => void\r\n}\r\n\r\nconst AddButton: React.FC<AddButtonInterface> = ({\r\n    text, delay, onClick, type\r\n}) => (\r\n    <motion.button\r\n        initial={{ y: 20, opacity: 0 }}\r\n        animate={{y: 0, opacity: 1}}\r\n        transition={{ duration: 0.01, delay }}\r\n        className='button button_add'\r\n        onClick={() => onClick(type)}\r\n    >\r\n        {text}\r\n    </motion.button>\r\n)\r\nexport default AddButton;\r\n","import * as React from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { useAppDispatch } from '../helpers/hooks';\r\nimport { addInput } from '../actions/inputAction';\r\nimport AddButton from './AddButton';\r\n\r\nconst AsidePanel: React.FC = () => {\r\n    const dispatch = useAppDispatch();\r\n    const { t } = useTranslation();\r\n\r\n    const inputHandler = (type: string): void => {\r\n        dispatch(addInput(type));\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <div className='container'>\r\n                <AddButton\r\n                    text={t('addTextField')}\r\n                    onClick={inputHandler}\r\n                    delay={0}\r\n                    type=\"text\"\r\n                />\r\n                <AddButton\r\n                    text={t('addNumberField')}\r\n                    onClick={inputHandler}\r\n                    delay={0.2}\r\n                    type=\"number\"\r\n                />\r\n                <AddButton\r\n                    text={t('addColorField')}\r\n                    onClick={inputHandler}\r\n                    delay={0.4}\r\n                    type=\"color\"\r\n                />\r\n                <AddButton\r\n                    text={t('addDateField')}\r\n                    onClick={inputHandler}\r\n                    delay={0.6}\r\n                    type=\"date\"\r\n                />\r\n                <AddButton\r\n                    text={t('addRangeField')}\r\n                    onClick={inputHandler}\r\n                    delay={0.8}\r\n                    type=\"range\"\r\n                />\r\n                <AddButton\r\n                    text={t('addEmailField')}\r\n                    onClick={inputHandler}\r\n                    delay={1}\r\n                    type=\"email\"\r\n                />\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default AsidePanel;\r\n","const formatDate = (date: Date): string => {\n    const str = [\n        `0${date.getMonth() + 1}`,\n        `0${date.getDate()}`\n    ].map(component => component.slice(-2));\n    return `${date.getFullYear()}-${str.join(\"-\")}`;\n}\n\nexport default formatDate;\n","import React, { useState, useEffect } from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\nimport randomColor from 'randomcolor';\r\nimport { motion } from 'framer-motion';\r\n\r\nimport { deleteInput } from '../actions/inputAction';\r\n\r\nimport { useAppDispatch } from '../helpers/hooks';\r\nimport formatDate from '../helpers/functions';\r\n\r\ninterface InputProps {\r\n    type: string,\r\n    id: string,\r\n    label: string\r\n}\r\n\r\nconst Input = ({ type, id, label }: InputProps): React.ReactElement => {\r\n    const [inputValue, setInputValue] = useState('');\r\n    const [isDisabled, setIsDisabled] = useState(true);\r\n\r\n    const { t } = useTranslation();\r\n\r\n    const dispatch = useAppDispatch();\r\n\r\n    useEffect(() => {\r\n        if (type === 'color') {\r\n            setInputValue(randomColor());\r\n        }\r\n        if (type === 'range') {\r\n            setInputValue('50');\r\n        }\r\n        if (type === 'date') {\r\n            const now = new Date();\r\n            setInputValue(formatDate(now));\r\n        }\r\n    }, [setInputValue, type]);\r\n\r\n    useEffect(() => {\r\n        if (!inputValue || (type === 'email'\r\n            && !inputValue.match(/^[a-zA-Z0-9._:$!%-]+@[a-zA-Z0-9.-]+.[a-zA-Z]$/)\r\n        )) { setIsDisabled(true); } else { setIsDisabled(false); }\r\n    }, [inputValue, type]);\r\n\r\n    const getType = (value: string): string => t(value)\r\n\r\n    const deleteInputHandler = () => {\r\n        dispatch(deleteInput(id));\r\n    };\r\n\r\n    const inputValueHandler = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n        setInputValue(e.target.value);\r\n    };\r\n\r\n    const formSubmitHandler = (e: React.SyntheticEvent) => {\r\n        e.preventDefault();\r\n        // eslint-disable-next-line no-console\r\n        console.log(inputValue);\r\n        if (['text', 'number', 'email'].includes(type)) setInputValue('');\r\n    };\r\n\r\n    return (\r\n        <motion.form\r\n            initial={{ x: -50, opacity: 0 }}\r\n            animate={{ opacity: 1, x: 0 }}\r\n            transition={{\r\n                type: \"spring\",\r\n                stiffness: 200,\r\n                damping: 20\r\n            }}\r\n            exit={{ opacity: 0, x: 50, transition: {duration: 0.4} }}\r\n            className=\"input\"\r\n            onSubmit={(e) => formSubmitHandler(e)}\r\n        >\r\n            <header className=\"input__header\">\r\n                <h4>\r\n                    {label}\r\n                    {' '}\r\n                    <span className=\"input__span\">\r\n                        (\r\n                        {getType(type)}\r\n                        )\r\n                    </span>\r\n                </h4>\r\n                <button\r\n                    aria-label=\"delete\"\r\n                    type=\"button\"\r\n                    className=\"button button_trash\"\r\n                    onClick={() => deleteInputHandler()}\r\n                />\r\n            </header>\r\n            <div className=\"input__body\">\r\n                <input\r\n                    type={type}\r\n                    value={inputValue}\r\n                    onChange={(e) => inputValueHandler(e)}\r\n                />\r\n                <button\r\n                    className=\"button button_small input__submit\"\r\n                    type=\"submit\"\r\n                    disabled={isDisabled}\r\n                >\r\n                    Console.log it!\r\n                </button>\r\n            </div>\r\n        </motion.form>\r\n    );\r\n};\r\n\r\nexport default Input;\r\n","import React from 'react';\r\nimport { AnimatePresence } from 'framer-motion';\r\n\r\nimport { useAppSelector } from '../helpers/hooks';\r\nimport Input from './Input';\r\n\r\ninterface InputInterface {\r\n    type: string,\r\n    id: string,\r\n    label: string,\r\n}\r\n\r\nconst MainPanel: React.FC = () => {\r\n    const { inputs } = useAppSelector((store) => store.input);\r\n\r\n    return (\r\n        <div>\r\n            <AnimatePresence>\r\n                {inputs.length ? inputs\r\n                    .slice()\r\n                    .reverse()\r\n                    .map((input: InputInterface) => (\r\n                        <Input\r\n                            key={input.id}\r\n                            id={input.id}\r\n                            type={input.type}\r\n                            label={input.label}\r\n                        />\r\n                    )) : (\r\n                        ''\r\n                    )}\r\n            </AnimatePresence>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default MainPanel;\r\n","import React from 'react';\r\nimport Header from './components/Header';\r\nimport AsidePanel from './components/AsidePanel';\r\nimport MainPanel from './components/MainPanel';\r\n\r\nconst App: React.FC = () => (\r\n    <div className='App' >\r\n        <Header />\r\n        <div className=\"main\">\r\n            <AsidePanel />\r\n            <MainPanel />\r\n        </div>\r\n    </div>\r\n)\r\n\r\nexport default App;\r\n","import { AnyAction } from 'redux';\r\n\r\nimport randomWords from 'random-words';\r\nimport emoji from 'random-happy-emoji';\r\nimport { v4 as uuid_v4 } from 'uuid';\r\n\r\nimport { ADD_INPUT, DELETE_INPUT, DELETE_ALL } from '../actions/actionTypes';\r\nimport { InputState } from './types';\r\n\r\nconst initState: InputState = {\r\n    inputs: [],\r\n};\r\n\r\nconst inputReducer = (state: InputState = initState, action: AnyAction): InputState => {\r\n    switch (action.type) {\r\n        case ADD_INPUT:\r\n            return {\r\n                ...state,\r\n                inputs: [\r\n                    ...state.inputs,\r\n                    {\r\n                        type: action.payload.type,\r\n                        id: uuid_v4(),\r\n                        label: `${emoji()} ${randomWords({ exactly: 1, wordsPerString: 2 })[0]}`\r\n                    },\r\n                ],\r\n            };\r\n        case DELETE_INPUT:\r\n            return {\r\n                ...state,\r\n                inputs: state.inputs.filter(\r\n                    (input) => input.id !== action.payload.id,\r\n                ),\r\n            };\r\n        case DELETE_ALL:\r\n            return {\r\n                ...state,\r\n                inputs: [],\r\n            };\r\n        default:\r\n            return { ...state };\r\n    }\r\n};\r\n\r\nexport default inputReducer;\r\n","import { combineReducers } from 'redux';\r\nimport inputReducer from './inputReducer';\r\n\r\nconst rootReducer = combineReducers({\r\n    input: inputReducer,\r\n});\r\n\r\nexport default rootReducer;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { createStore, compose } from 'redux';\r\nimport { Provider } from 'react-redux';\r\nimport App from './App';\r\nimport rootReducer from './reducers';\r\nimport './assets/styles/main.scss';\r\n\r\ndeclare global {\r\n    interface Window {\r\n      __REDUX_DEVTOOLS_EXTENSION_COMPOSE__?: typeof compose;\r\n    }\r\n}\r\n\r\n// eslint-disable-next-line no-underscore-dangle\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ as typeof compose || compose;\r\n\r\nconst store = createStore(rootReducer, composeEnhancers());\r\n\r\n// \"Whatever is being returned from store.getState, I want the types stored ad the RootState variable\" \r\n// https://stackoverflow.com/a/67656911/13891817\r\nexport type RootState = ReturnType<typeof store.getState>\r\n\r\n// \"Get the dispatch object from the store, break it down into it's types, and store it in the AppDispatch variable\"\r\n// https://stackoverflow.com/a/67656911/13891817\r\nexport type AppDispatch = typeof store.dispatch;\r\n\r\nReactDOM.render(\r\n    <React.StrictMode>\r\n        <Provider store={store} >\r\n            <App />\r\n        </Provider>\r\n    </React.StrictMode>,\r\n    document.getElementById('root'),\r\n);\r\n"],"sourceRoot":""}