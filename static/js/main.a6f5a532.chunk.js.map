{"version":3,"sources":["components/AsidePanel.js","actions/inputAction.js","components/Input.js","components/MainPanel.js","App.js","reportWebVitals.js","reducers/inputReducer.js","reducers/index.js","index.js"],"names":["AsidePanel","dispatch","useDispatch","inputHandler","type","payload","id","uuid_v4","addInput","className","onClick","Input","useState","inputValue","setInputValue","inputLabel","setInputLabel","useEffect","emoji","randomWords","exactly","wordsPerString","randomColor","onSubmit","e","preventDefault","console","log","formSubmitHandler","aria-label","deleteInput","value","onChange","target","inputValueHandler","disabled","MainPanel","inputs","useSelector","store","input","length","slice","reverse","map","inputName","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","initState","inputReducer","state","action","filter","rootReducer","combineReducers","createStore","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a6f5a532.chunk.js","sourcesContent":["import React from 'react';\nimport { useDispatch } from 'react-redux';\nimport { addInput } from '../actions/inputAction';\n\nconst AsidePanel = () => {\n    const dispatch = useDispatch();\n\n    const inputHandler = (type) => {\n        dispatch(addInput(type));\n    };\n\n    return (\n        <div>\n            <div className='container'>\n                <button\n                    className='button button_add'\n                    onClick={() => inputHandler('text')}\n                >\n                    Add text field\n                </button>\n                <button\n                    className='button button_add'\n                    onClick={() => inputHandler('number')}\n                >\n                    Add number field\n                </button>\n                <button\n                    className='button button_add'\n                    onClick={() => inputHandler('color')}\n                >\n                    Add color field\n                </button>\n                <button\n                    className='button button_add'\n                    onClick={() => inputHandler('date')}\n                >\n                    Add date field\n                </button>\n                <button\n                    className='button button_add'\n                    onClick={() => inputHandler('range')}\n                >\n                    Add range field\n                </button>\n            </div>\n        </div>\n    );\n};\n\nexport default AsidePanel;\n","import { v4 as uuid_v4 } from 'uuid';\n\nexport const addInput = (type) => {\n    return {\n        type: 'ADD_INPUT',\n        payload: {\n            type: type,\n            id: uuid_v4(),\n        },\n    };\n};\n\nexport const deleteInput = (id) => {\n    return {\n        type: 'DELETE_INPUT',\n        payload: {\n            id: id,\n        },\n    };\n};\n","import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { useDispatch } from 'react-redux';\nimport { deleteInput } from '../actions/inputAction';\nimport randomColor from 'randomcolor';\nimport randomWords from 'random-words';\nimport emoji from 'random-happy-emoji';\n\nconst Input = ({ type, id }) => {\n    const [inputValue, setInputValue] = useState('');\n    const dispatch = useDispatch();\n    const [inputLabel, setInputLabel] = useState();\n\n    useEffect(() => {\n        setInputLabel(\n            `${emoji()} ${\n                randomWords({\n                    exactly: 1,\n                    wordsPerString: 2,\n                })[0]\n            }`,\n        );\n    }, [setInputLabel]);\n\n    useEffect(() => {\n        if (type === 'color') {\n            setInputValue(randomColor);\n        }\n        if (type === 'range') {\n            setInputValue('50');\n        }\n    }, [setInputValue, type]);\n\n    const deleteInputHandler = () => {\n        dispatch(deleteInput(id));\n    };\n\n    const inputValueHandler = (e) => {\n        setInputValue(e.target.value);\n    };\n\n    const formSubmitHandler = (e) => {\n        e.preventDefault();\n        console.log(inputValue);\n        if (type === 'text' || type === 'number') setInputValue('');\n    };\n\n    return (\n        <form className='input' onSubmit={(e) => formSubmitHandler(e)}>\n            <header className='input__header'>\n                <h4>\n                    {inputLabel} <span className='input__span'>({type})</span>\n                </h4>\n                <button\n                    aria-label='delete'\n                    type='button'\n                    className='button button_trash'\n                    onClick={() => deleteInputHandler()}\n                ></button>\n            </header>\n            <div className='input__body'>\n                <input\n                    type={type}\n                    value={inputValue}\n                    onChange={(e) => inputValueHandler(e)}\n                />\n                <button\n                    className='button button_small input__submit'\n                    type='submit'\n                    disabled={!inputValue}\n                >\n                    Console.log it!\n                </button>\n            </div>\n        </form>\n    );\n};\n\nInput.propTypes = {\n    type: PropTypes.string.isRequired,\n    id: PropTypes.string.isRequired,\n};\n\nexport default Input;\n","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport Input from './Input';\n\nconst MainPanel = () => {\n    const { inputs } = useSelector((store) => store.input);\n\n    return (\n        <div>\n            {inputs.length ? (\n                <h1>Your inputs:</h1>\n            ) : (\n                <h1>Add some input fields</h1>\n            )}\n            {inputs && (\n                <div>\n                    {inputs\n                        .slice()\n                        .reverse()\n                        .map((input) => (\n                            <Input\n                                key={input.id}\n                                id={input.id}\n                                type={input.type}\n                                inputName={input.inputName}\n                            />\n                        ))}\n                </div>\n            )}\n        </div>\n    );\n};\n\nexport default MainPanel;\n","import React from 'react';\nimport AsidePanel from './components/AsidePanel';\nimport MainPanel from './components/MainPanel';\n\nfunction App() {\n    return (\n        <div className='App'>\n            <AsidePanel />\n            <MainPanel />\n        </div>\n    );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","const initState = {\n    inputs: [],\n};\n\nconst inputReducer = (state = initState, action) => {\n    switch (action.type) {\n        case 'ADD_INPUT':\n            return {\n                ...state,\n                inputs: [\n                    ...state.inputs,\n                    {\n                        type: action.payload.type,\n                        id: action.payload.id,\n                    },\n                ],\n            };\n        case 'DELETE_INPUT':\n            return {\n                ...state,\n                inputs: state.inputs.filter(\n                    (input) => input.id !== action.payload.id,\n                ),\n            };\n        default:\n            return { ...state };\n    }\n};\n\nexport default inputReducer;\n","import { combineReducers } from 'redux';\nimport inputReducer from './inputReducer';\n\nconst rootReducer = combineReducers({\n    input: inputReducer,\n});\n\nexport default rootReducer;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { createStore } from 'redux';\nimport { Provider } from 'react-redux';\nimport rootReducer from './reducers';\nimport './assets/styles/main.scss';\n\nconst store = createStore(rootReducer);\n\nReactDOM.render(\n    <React.StrictMode>\n        <Provider store={store}>\n            <App />\n        </Provider>\n    </React.StrictMode>,\n    document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}